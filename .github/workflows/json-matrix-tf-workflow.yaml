#
#
# Source: https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/
#   - Now you can include completely new combinations and even specify all of your matrix legs with include.
#   - The Actions expression language has a fromJSON(value) method that can take a stingified JSON object and bind it to a property.
#   - Combining this with run-tf-matrix.outputs you can build a workflow that has a fully dynamic matrix.
#

name: tf-matrix
on: push
jobs:
  create-tf-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: checkout code
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: test changed files
      id: check-terraform-folder-for-changed-files
      # Only run terraform IF tf files changed: https://github.com/tj-actions/changed-files
      # output: all_changed_and_modified_files (list of all files changed/modified)
      uses: tj-actions/changed-files@v13
      with:
        files: |
          terraform/**/*tf

    - name: set matrix
      id: set-matrix
      # set JSON-matrix as output for usage in other jobs/steps
      # source: https://stackoverflow.com/questions/59977364/github-actions-how-use-strategy-matrix-with-script
      run: |
        FILE_LIST=$(echo ${{ steps.check-terraform-folder-for-changed-files.outputs.all_modified_files }} | sort -u)
        DIR_LIST=$(dirname $FILE_LIST | sort -u)
        echo " *************"
        echo "$DIR_LIST"
        echo " *************"
        JSON="{\"include\":["
        for FOLDER in $(echo $DIR_LIST); do
          echo " *** Adding folder:$FOLDER:"
          JSON+="{\"folder\": \"$FOLDER\"},"
        done

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
          JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo " *************"
        echo $JSON  | jq
        echo " *************"
        # Set output
        echo "::set-output name=matrix::$( echo "$JSON" )"

    - name: show folder
      run: |
        echo " folder:${{ matrix.folder}}"
        echo " Do we have changed-files:${{ steps.check-terraform-folder-for-changed-files.outpus.any_changed }}:"

  run-tf-matrix:
    needs: create-tf-matrix
    if: (! ${{ needs.tf-matrix.outputs.only_changed == 'true'}} )
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.create-tf-matrix.outputs.matrix)}}
    # prevent this job from running with an empty matrix: It would fail.

    steps:
      - name: show folder
        run: |
          echo " folder:${{ matrix.folder}}"

      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.6

      - name: Terraform fmt ${{ matrix.folder}}
        id: fmt
        run: terraform -chdir=${{ matrix.folder}} fmt -check
